{"ast":null,"code":"var _jsxFileName = \"/Users/banutryon/dev/portfolio/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // MUI\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport CardMedia from '@material-ui/core/CardMedia';\nimport P1 from \"./../assets/Marvel.mov\";\nimport P3 from \"./../assets/8.mov\";\nimport P5 from \"./../assets/tesla.mov\"; // \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  media1: {\n    width: \"20rem\",\n    // float: 'right',\n    margin: \"1rem\"\n  },\n  media2: {\n    width: \"20rem\",\n    // position: \"relative\",\n    // top: \"10rem\",\n    margin: \"1rem\"\n  },\n  media3: {\n    width: \"30rem\" // position: \"relative\",\n    // margin: \"0 auto\",\n    // top: \"20rem\",\n\n  }\n}));\nexport default function Projects() {\n  _s();\n\n  const classes = styles();\n  const theme = useTheme(); // media queries\n\n  const matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      align: \"left\",\n      style: {\n        textAlign: \"center\",\n        margin: \"5rem\"\n      },\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: matchesSM ? \"center\" : \"left\",\n      style: {\n        fontWeight: \"lighter\",\n        margin: \"40px\"\n      },\n      children: \"In my Marvel Card deck, I used Javascript, Html, and CSS as well as Axios to pull an online API. The magic 8 Ball App is a play on the traditional magic 8 Ball. Simply ask the 8 Ball a question and click the ask button. You will get a random gif as an answer. It is a full crud app built with React with a Mongodb backend app. If you click on the 8 Ball  logo you will get a drop-down that will provide some basic information about how to play the game and the option to create a new gif to add to the API. The Last example is a Tesla Battery calculator for the Tesla Model S. I used React Native with Redux on the front end and used Mongodb for the backend. I also custom-built the api to support the new Tesla Model S that will come out this year.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      id: \"about\",\n      className: classes.techContainer,\n      container: true,\n      justify: \"space-between\",\n      alignItems: \"center\",\n      direction: \"row\",\n      margin: \"50px\",\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"video\",\n        className: classes.media1,\n        src: P1,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"video\",\n        className: classes.media2,\n        src: P3,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"video\",\n        className: classes.media3,\n        src: P5,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Projects, \"75kp8dDqIm8tL3K2OCsRD77uP+I=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/banutryon/dev/portfolio/src/components/Projects.js"],"names":["React","makeStyles","useTheme","Grid","Typography","useMediaQuery","CardMedia","P1","P3","P5","styles","theme","media1","width","margin","media2","media3","Projects","classes","matchesSM","breakpoints","down","textAlign","fontWeight","techContainer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAQC,UAAR,MAAyB,8BAAzB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,EAAP,MAAe,wBAAf;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,OAAOC,EAAP,MAAe,uBAAf,C,CACA;;;AAGA,MAAMC,MAAM,GAAGT,UAAU,CAAGU,KAAD,KAAY;AACnCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,OADH;AAEJ;AACAC,IAAAA,MAAM,EAAE;AAHJ,GAD2B;AAOnCC,EAAAA,MAAM,EAAE;AACJF,IAAAA,KAAK,EAAE,OADH;AAEJ;AACA;AACAC,IAAAA,MAAM,EAAE;AAJJ,GAP2B;AAcnCE,EAAAA,MAAM,EAAE;AACJH,IAAAA,KAAK,EAAE,OADH,CAEJ;AACA;AACA;;AAJI;AAd2B,CAAZ,CAAF,CAAzB;AAwBA,eAAe,SAASI,QAAT,GAAoB;AAAA;;AAClC,QAAMC,OAAO,GAAGR,MAAM,EAAtB;AACA,QAAMC,KAAK,GAAGT,QAAQ,EAAtB,CAFkC,CAG/B;;AACA,QAAMiB,SAAS,GAAGd,aAAa,CAACM,KAAK,CAACS,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA/B;AAEH,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,4BACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,QAAZ;AAAsBR,QAAAA,MAAM,EAAE;AAA9B,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAIc,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAEK,SAAS,GAAG,QAAH,GAAc,MAAvD;AAA+D,MAAA,KAAK,EAAE;AAACI,QAAAA,UAAU,EAAE,SAAb;AAAwBT,QAAAA,MAAM,EAAE;AAAhC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJd,eAWM,QAAC,IAAD;AACA,MAAA,EAAE,EAAC,OADH;AAEA,MAAA,SAAS,EAAEI,OAAO,CAACM,aAFnB;AAGA,MAAA,SAAS,MAHT;AAIA,MAAA,OAAO,EAAC,eAJR;AAKA,MAAA,UAAU,EAAC,QALX;AAMA,MAAA,SAAS,EAAC,KANV;AAOA,MAAA,MAAM,EAAC,MAPP;AAAA,8BASA,QAAC,SAAD;AAEI,QAAA,SAAS,EAAC,OAFd;AAGI,QAAA,SAAS,EAAEN,OAAO,CAACN,MAHvB;AAII,QAAA,GAAG,EAAEL,EAJT;AAKI,QAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,cATA,eAiBA,QAAC,SAAD;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,SAAS,EAAEW,OAAO,CAACH,MAFvB;AAGI,QAAA,GAAG,EAAEP,EAHT;AAII,QAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,cAjBA,eAwBA,QAAC,SAAD;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,SAAS,EAAEU,OAAO,CAACF,MAFvB;AAGI,QAAA,GAAG,EAAEP,EAHT;AAII,QAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,cAxBA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXN;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA6CA;;GAnDuBQ,Q;UAETf,Q,EAEOG,a;;;KAJEY,Q","sourcesContent":["import React from \"react\";\n// MUI\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport  Typography  from \"@material-ui/core/Typography\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport CardMedia from '@material-ui/core/CardMedia';\nimport P1 from \"./../assets/Marvel.mov\"\nimport P3 from \"./../assets/8.mov\"\nimport P5 from \"./../assets/tesla.mov\"\n// \n\n\nconst styles = makeStyles ((theme) => ({\n    media1: {\n        width: \"20rem\",\n        // float: 'right',\n        margin: \"1rem\",\n        \n    }, \n    media2: {\n        width: \"20rem\",\n        // position: \"relative\",\n        // top: \"10rem\",\n        margin: \"1rem\",\n\n    }, \n    media3: {\n        width: \"30rem\",\n        // position: \"relative\",\n        // margin: \"0 auto\",\n        // top: \"20rem\",\n    }\n\n\n}));\n\nexport default function Projects() {\n\tconst classes = styles();\n\tconst theme = useTheme();\n    // media queries\n    const matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"))\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Typography variant=\"h2\" align=\"left\" style={{textAlign: \"center\", margin: \"5rem\"}}>\n                    Projects\n                </Typography>\n                <Typography variant=\"h6\" align={matchesSM ? \"center\" : \"left\"} style={{fontWeight: \"lighter\", margin: \"40px\"}}>\n                In my Marvel Card deck, I used Javascript, Html, and CSS as well as Axios to pull an online API. \n                The magic 8 Ball App is a play on the traditional magic 8 Ball. Simply ask the 8 Ball a question and click the ask button. You will get a random gif as an answer.\n                It is a full crud app built with React with a Mongodb backend app. If you click on the 8 Ball  logo you will get a drop-down that will provide some basic information about how to play the game and the option to create a new gif to add to the API.\n                The Last example is a Tesla Battery calculator for the Tesla Model S. I used React Native with Redux on the front end and used Mongodb for the backend. I also custom-built the api to support the new Tesla Model S that will come out this year.  \n\n                </Typography>\n        <Grid\n        id=\"about\"\n        className={classes.techContainer}\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        direction=\"row\"\n        margin=\"50px\"\n      >      \n        <CardMedia\n        \n            component='video'\n            className={classes.media1}\n            src={P1}\n            autoPlay\n        />\n        \n        <CardMedia\n            component='video'\n            className={classes.media2}\n            src={P3}\n            autoPlay\n        />\n        \n        <CardMedia\n            component='video'\n            className={classes.media3}\n            src={P5}\n            autoPlay\n        />\n        </Grid>  \n\t\t</React.Fragment>\n\t);\n}"]},"metadata":{},"sourceType":"module"}